import React, { useEffect, useState} from "react";
import { useAuth } from "../../context/AuthContext";
import { useNavigate } from "react-router-dom";

/**
 * Home.jsx
 * ---------------------------------------
 * Pantalla de inicio de sesi√≥n.
 * - Si el usuario ya est√° autenticado, redirige autom√°ticamente a /productos.
 * - Si no, muestra el bot√≥n de Google.
 * - Usa el Client ID configurado en tu proyecto de Google Cloud.
 */
export default function Home() {
  const { login, authenticated, loading } = useAuth();
  const navigate = useNavigate();

  // üí° Nuevo estado para rastrear el inicio del proceso de login
  const [isLoggingIn, setIsLoggingIn] = useState(false);

  // üîÅ Redirige si ya hay sesi√≥n activa
  useEffect(() => {
    if (!loading && authenticated) {
      // navigate("/productos");
      navigate("/admin");
    }
  }, [authenticated, loading, navigate]);

  // üöÄ Inicializar el bot√≥n de Google
  useEffect(() => {
    if (loading || authenticated || isLoggingIn) return; // üëà evita inicializar el bot√≥n si ya hay sesi√≥n o a√∫n carga
    if (typeof window.google === "undefined") return;

    window.google.accounts.id.initialize({
      client_id:
        "648554486893-4b33o1cei2rfhv8ehn917ovf60h1u9q4.apps.googleusercontent.com",
      callback: (response) => {
        const token = response.credential;
        setIsLoggingIn(true); // üëà Activa el spinner

        // üí° Pasar una funci√≥n de limpieza que se ejecutar√° al terminar el login
        login(token, () => {
          setIsLoggingIn(false); // üëà Desactiva el spinner SIEMPRE que login() finalice
        });
      },
    });

    window.google.accounts.id.renderButton(
      document.getElementById("googleLoginDiv"),
      {
        theme: "filled_blue",
        size: "large",
        shape: "pill",
        text: "signin_with",
        width: 240,
      }
    );

    // Opcional: mostrar autom√°ticamente One Tap
    window.google.accounts.id.prompt();

  }, [login, loading, authenticated]);

  // ‚è≥ Mientras carga AuthContext, muestra spinner en lugar del bot√≥n
  if (loading) {
    return (
      <div className="d-flex justify-content-center align-items-center vh-100">
        <div className="text-center">
          <div className="spinner-border text-primary mb-3" role="status" />
          <p className="text-secondary">Verificando sesi√≥n...</p>
        </div>
      </div>
    );
  }

  // Si ya est√° autenticado, no renderizar nada (navegaci√≥n autom√°tica se encarga)
  if (authenticated) return null;


  // ‚è≥ Mientras carga AuthContext (verificaci√≥n inicial), muestra spinner
  if (loading) {
    return (
      <div className="d-flex justify-content-center align-items-center vh-100">
        <div className="text-center">
          <div className="spinner-border text-primary mb-3" role="status" />
          <p className="text-secondary">Verificando sesi√≥n...</p>
        </div>
      </div>
    );
  }

  // üîí Muestra un spinner si el token ya fue recibido y el login est√° en curso
  if (isLoggingIn && !authenticated) {
    return (
      <div className="d-flex justify-content-center align-items-center vh-100">
        <div className="text-center">
          <div className="spinner-border text-success mb-3" role="status" />
          <p className="text-success">Iniciando sesi√≥n, un momento...</p>
        </div>
      </div>
    );
  }

  // Si ya est√° autenticado, no renderizar nada (navegaci√≥n autom√°tica se encarga)
  if (authenticated) return null;

  // üëá Solo se muestra si no hay sesi√≥n, ya se verific√≥ y no est√° en proceso de login
  return (
    <div className="container d-flex flex-column justify-content-center align-items-center vh-100">
      <div className="card shadow p-4 text-center" style={{ maxWidth: 400 }}>
        <h3 className="mb-3 fw-bold">Bienvenido</h3>
        <p className="text-muted mb-4">
          Inicia sesi√≥n con tu cuenta de Google para continuar
        </p>

        <div id="googleLoginDiv"></div>
      </div>
    </div>
  );
}

